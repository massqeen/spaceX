@mixin retina($x) {

  @media (min-width: 768px) and (-webkit-min-device-pixel-ratio: $x),
  (min-width: 768px) and (min-resolution: 96dpi*$x) {
    @content;
  }
}

@mixin for-size($size) {

  //576px
  @if $size==phone-only {
    @media (max-width: 35.94em) {
      @content;
    }
  }

  //768px
  @else if $size==tablet {
    @media (max-width: 47.94em) {
      @content;
    }
  }

  //<992px
  @else if $size==tablet-landscape {
    @media (max-width: 61.94em) {
      @content;
    }
  }

  //<1200px
  @else if $size==desktop-up {
    @media (max-width: 74.94em) {
      @content;
    }
  }
}

@mixin font($fontfamily, $fontsize, $fontweight) {
  font-family: $fontfamily;
  font-size: $fontsize;
  font-weight: $fontweight;
}

//vertical centering any element
@mixin vertical-center {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

//fast import of the fonts
@mixin font-face($name, $file) {
  @font-face {
    font-family: "#{$name}";
    src: url("../fonts/#{$file}.eot");
    src: url("../fonts/#{$file}.eot?#iefix") format("embedded-opentype"),
    url("../fonts/#{$file}.woff") format("woff"),
    url("../fonts/#{$file}.ttf") format("truetype"),
    url("../fonts/#{$file}.svg?#webfont") format("svg");
  }
}

//absolute positioning
@mixin abs-position($top, $right, $bottom, $left) {
  position: absolute;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

//arrows
@mixin arrow($direction: down, $size: 5px, $color: #555) {
  width: 0;
  height: 0;

  @if ($direction==left) {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
  }

  @else if ($direction==right) {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
  }

  @else if ($direction==down) {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
  }

  @else {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
  }
}

//fixed aspect ratio - needed such HTML (!include mixin in outer box):
/*<div class="outer-box">
    <div class="inner-box">
    </div>
  </div>*/
@mixin aspect-ratio($width, $height) {
  position: relative;

  &:before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }

  >.inner-box {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

//text shortening
@mixin text-shorten {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

//flex center
@mixin flex-center($justify:center, $align:center) {
  display: flex;
  align-items: $align;
  justify-content: $justify;
}
